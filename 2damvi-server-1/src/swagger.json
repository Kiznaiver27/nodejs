{
  "swagger": "2.0",
  "info": {
    "description": "",
    "version": "1.0.0",
    "title": "NodePlayers"
  },
  "paths": {
    "/": {
      "get": {
        "tags": ["Show Players"],
        "summary": "Principal Screen",
        "description": "This is the principal screen",
        "parameters": [],
        "responses": {
          "100": {
            "description": "Principal Screen",
            "schema": {
              "$ref": "#/definitions/code100"
            }
          }
        }
      }
    },
    "/players":{
      "get": {
        "tags": ["Show Players"],
        "summary": "Show Players",
        "description": "Show all the players",
        "parameters": [],
        "responses": {
          "400": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "position": {
                  "type": "integer",
                  "example": 1
                },
                "alias": {
                  "type": "string",
                  "example": "samv",
                  "description": "The username of the Player"
                },
                "name": {
                  "type": "string",
                  "example": "Samuel",
                  "description": "Name of the Player"
                },
                "surname": {
                  "type": "string",
                  "example": "Viguera",
                  "description": "Surname of the Player"
                },
                "score": {
                  "type": "integer",
                  "example": 3000
                }
              }
            }
          }
        }
      }
    },
    "/players/{alias}": {
      "parameters": [
        {
          "name": "alias",
          "in": "path",
          "required": true,
          "description": "Alias of player that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": ["Show Players"],
        "summary": "Show Players",
        "description": "Show all the players",
        "parameters": [
          {
            "name": "alias",
            "in": "path",
            "description": "The Alias of the Player.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Player Exists",
            "schema": {
              "$ref": "#/definitions/code200"
            }
          },
          "504": {
            "description": "Player Not Found",
            "schema": {
              "$ref": "#/definitions/codeError504"
            }
          }
        }
      },
      "post": {
        "tags": ["Edit Players"],
        "summary": "Create Players",
        "description": "Enter a new player",
        "parameters": [
          {
            "name": "Player",
            "in": "body",
            "description": "Player that we want to create",
            "schema": {
              "$ref": "#/definitions/Player"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New Player is created",
            "schema": {
              "$ref": "#/definitions/Player"
            }
          },
          "201": {
            "description": "Player Created",
            "schema": {
              "$ref": "#/definitions/code201"
            }
          },
          "502": {
            "description": "The field; name, surname, score are mandatories (the score value has to be >0)",
            "schema": {
              "$ref": "#/definitions/codeError502"
            }
          },
          "503": {
            "description": "Player Exists",
            "schema": {
              "$ref": "#/definitions/codeError503"
            }
          }
        }
      },
      "put": {
        "tags": ["Edit Players"],
        "summary": "Edit a Player",
        "description": "Edit a player",
        "parameters": [
          {
            "name": "Player",
            "in": "body",
            "description": "Player that we want to update",
            "schema": {
              "$ref": "#/definitions/Player"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Player Correctly Updated",
            "schema": {
              "$ref": "#/definitions/Player"
            }
          },
          "202": {
            "description": "Player Correctly Updated",
            "schema": {
              "$ref": "#/definitions/code202"
            }
          },
          "502": {
            "description": "The field; name, surname, score are mandatories (the score value has to be >0)",
            "schema": {
              "$ref": "#/definitions/codeError502"
            }
          },
          "504": {
            "description": "Error; Player not found",
            "schema": {
              "$ref": "#/definitions/codeError504"
            }
          }
        }
      }
    },
    "/ranking": {
      "get": {
        "tags": ["Show Players"],
        "summary": "Show Players",
        "description": "Show all the players",
        "parameters": [],
        "responses": {
          "400": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "position": {
                  "type": "integer",
                  "example": 1
                },
                "alias": {
                  "type": "string",
                  "example": "GForce",
                  "description": "The username of the Player"
                },
                "name": {
                  "type": "string",
                  "example": "Samuel",
                  "description": "Name of the Player"
                },
                "surname": {
                  "type": "string",
                  "example": "Viguera",
                  "description": "Surname of the Player"
                },
                "score": {
                  "type": "integer",
                  "example": 200
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Player":{
      "required": [
        "name",
        "surname",
        "score"
      ],
      "properties": {
        "name": {
          "type": "string",
          "uniqueItems": true
        },
        "surname": {
          "type": "string"
        },
        "score": {
          "type": "integer"
        }
      },
      "example":{
        "name": "Samuel",
        "surname": "Viguera",
        "score": 3
      }
    },
    "code100": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": "2-DAMVI Server Up",
          "description": "Server-Up"
        }
      }
    },
    "code200": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": "Player Exists",
          "description": "Player Exists"
        }
      }
    },
    "code201": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": "Player Correctly Created",
          "description": "Player Correctly Created"
        }
      }
    },
    "code202": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": "Player Correctly Updated",
          "description": "Player Correctly Updated"
        }
      }
    },
    "codeError502": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": "The field; name, surname, score are mandatories (the score value has to be >0)",
          "description": "The field; name, surname, score are mandatories (the score value has to be >0)"
        }
      }
    },
    "codeError503": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": "Error; Player Exists",
          "description": "Error; Player Exists"
        }
      }
    },
    "codeError504": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": "Error; Player not found",
          "description": "Error; Player not found"
        }
      }
    }
  }
}